;a code for adding 10 contents of table 0000h and 0010h and store from 0020h
LXI B,0000H
LXI D,0010H
LXI H,0020H
MVI A,0AH
AGAIN:PUSH A
LDAX B
INX B
PUSH B
MOV B,A
LDAX D
ADD B
MOV M,A
POP B
POP PSW
INX H
INX D
DCR A
JNZ AGAIN
HLT

;a code for storing the multiplication of a number at 0000h in 0010h at the interval of 2 seconds
LDA 0000H
MOV B,A
MVI C,0AH
MVI D,01H
L2:XRA A
MOV E,D
L1:ADD B
DCR E
JNZ L1
PUSH A
CALL DELAY
CALL DELAY
POP PSW
STA 0010H
INR D
DCR C
JNZ L2
HLT

;delay of 1 second
DELAY:MVI C,02H
D1: LXI D,FFFFH
D2:DCX D
MOV A,D
ORA E
JNZ D2
DCR C
JNZ D1
RET

;a code to add 10 16 bit datas from 0000h and 0020h and store from 0040h
LXI B,0000H
LXI D,0040H
LXI H,0020H
MVI A,0AH
AGAIN:PUSH A
LDAX B
ADD M
STAX D
INX B
INX D
INX H
LDAX B
ADC M
STAX D
INX B
INX D
INX H
POP PSW
DCR A
JNZ AGAIN
HLT

;a code for placing the number greater than 40h and less than coh else place 00h
LXI B, 0000H
LXI H, 0020H
MVI D,0AH
AGAIN:LDAX B
MVI M,00H
CPI C0H
JNC NEXT
CPI 40H
JC NEXT
MOV M,A
NEXT:INX B
INX H
DCR D
JNZ AGAIN
HLT


TITLE TO SHOW THE SUM OF SERIES 1^2 +2^2 TO N^2
.MODEL SMALL
.STACK 100H
.DATA
STRING1 DB "ENTER THE nTH TERM: ",'$'
STRING2 DB "THE SUM OF THE SERIES IS ",'$'
NUM DB 0
RES DW 0
COUNT DB 0

.CODE
MAIN PROC FAR
MOV AX,@DATA
MOV DS,AX

;CLEAR SCREEN
MOV AH,00H
MOV AL,03H
INT 10H

;UI1
MOV AH,09H
LEA DX, STRING1
INT 21H

MOV AX,0

;TAKE ATMOST 2 DIGIT DECIMAL
MOV CX,02
TAKEDECI:MOV AH,01H
INT 21H
CMP AL,0DH
JE LP
SUB AL,30H
PUSH AX
MOV AL,10
MUL NUM
MOV NUM,AL
POP AX
ADD NUM,AL
INC COUNT
LP: LOOPNE TAKEDECI

;SUMMATION
MOV CH,0
MOV CL,NUM
AGAIN:MOV AX,0
MOV BX,0
MOV BL,CL
MOV AL,CL
MUL BL
ADD RES,AX
LOOP AGAIN

;NEW LINE
MOV AH,02H
MOV DX,0AH
INT 21H
MOV DX,0DH
INT 21H

;UI2
MOV AH,09H
LEA DX,STRING2
INT 21H

;DISPLAY ANSWER IN DECIMAL
MOV AX,0
MOV AX,RES
CALL DISP_DECIMAL

MOV AX,4C00H
INT 21H

DISP_DECIMAL PROC
MOV BX,10
MOV CX,0
HERE:MOV DX,0
DIV BX
ADD DX,30H
PUSH DX
INC CX
CMP AX,0
JA HERE

MOV AH,02H
DISP: POP DX
INT 21H
LOOP DISP
RET
DISP_DECIMAL ENDP

MAIN ENDP
END MAIN

TITLE TO CONVERT THE VOWELS TO UPPER CASE IN THE STRING ENTERED BY THE USER
.MODEL SMALL
.STACK 100H
.DATA
STRING1 DB "ENTER THE STRING: ",'$'
STRING2 DB "VOWELS TO UPPERCASE: ",'$'
NUM DB 0
COUNT DB 0
STRING LABEL BYTE
MAXLEN DB 30
ACCTUAL DB ?
INPUT DB 30 DUP('$')

.CODE
MAIN PROC FAR
MOV AX,@DATA
MOV DS,AX

;CLEAR SCREEN
MOV AH,00H
MOV AL,03H
INT 10H

;UI1
MOV AH,09H
LEA DX, STRING1
INT 21H

;TAKE INPUT
MOV AH, 0AH
LEA DX, STRING
INT 21H

MOV SI,OFFSET STRING
MOV CH,0
MOV CL,ACCTUAL+2
MOV BX,0
AGAIN:MOV AL,[SI]
CMP AL,'a'
JE TOUPPER
CMP AL,'e'
JE TOUPPER
CMP AL,'i'
JE TOUPPER
CMP AL,'o'
JE TOUPPER
CMP AL,'u'
JE TOUPPER
NEXT:INC SI
LOOP AGAIN
JMP UI2

TOUPPER:SUB AL,20H
MOV [SI],AL
JMP NEXT

UI2:MOV AH,02H
MOV DX,0AH
INT 21H
MOV DX,0DH
INT 21H

MOV AH,09H
LEA DX,STRING2
INT 21H

LEA DX,STRING+2
INT 21H

MOV AX,4C00H
INT 21H

MAIN ENDP
END MAIN

TITLE TO ALTER THE CASES OF THE STRING ENTERED BY THE USER
.MODEL SMALL
.STACK 100H
.DATA
STRING1 DB "ENTER THE STRING: ",'$'
STRING2 DB "TO UPPER OR LOWERCASE: ",'$'
NUM DB 0
COUNT DB 0
STRING LABEL BYTE
MAXLEN DB 30
ACCTUAL DB ?
INPUT DB 30 DUP('$')

.CODE
MAIN PROC FAR
MOV AX,@DATA
MOV DS,AX

;CLEAR SCREEN
MOV AH,00H
MOV AL,03H
INT 10H

;UI1
MOV AH,09H
LEA DX, STRING1
INT 21H

;TAKE INPUT
MOV AH, 0AH
LEA DX, STRING
INT 21H

MOV SI,OFFSET STRING
MOV CH,0
MOV CL,ACCTUAL+2
MOV BX,0
AGAIN:MOV AL,[SI]
CMP AL, 65;
JB NEXT
CMP AL, 90;Z
JA TOUPPER
ADD AL,20H
JMP NEXT
TOUPPER:CMP AL,122;
JA NEXT
CMP AL,97;
JB NEXT
SUB AL,20H 
NEXT:MOV [SI],AL
INC SI
LOOP AGAIN
JMP UI2


UI2:MOV AH,02H
MOV DX,0AH
INT 21H
MOV DX,0DH
INT 21H

MOV AH,09H
LEA DX,STRING2
INT 21H

LEA DX,STRING+2
INT 21H

MOV AX,4C00H
INT 21H

MAIN ENDP
END MAIN